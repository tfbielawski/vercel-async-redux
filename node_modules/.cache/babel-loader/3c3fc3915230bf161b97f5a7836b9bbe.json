{"ast":null,"code":"//Imports\nimport axios from 'axios'; //Define and export getMonster function\n\nexport const getMonster = () => {\n  //REturn, pass in the dispatch()\n  return dispatch => {\n    //Call dispatch, pass in fetchStart()\n    dispatch(fetchStart()); //Get the monsters\n\n    axios.get(\"https://www.dnd5eapi.co/api/monsters/\") //Then set the data\n    .then(res => {\n      //Generate a random number to randomly choose a monster\n      var randomNumber = Math.floor(Math.random() * 300); //Log the index from the api return\n\n      console.log(\"MONSTER>>>\", res.data.results);\n      console.log(\"RESULTS>>>>\", res.data.results[`${randomNumber}`]); //Assign the index to a variable\n\n      const monsterName = res.data.results[`${randomNumber}`].index; //invoke dispatch, pass in fetchSuccess with randomnumber and index\n      //which determines the monster we are calling. Assign to results\n\n      dispatch(fetchSuccess(res.data.results[`${randomNumber}`].index)); //Call API again, append the index to the api\n\n      axios.get(`https://www.dnd5eapi.co/api/monsters/${monsterName}`).then(res => {\n        console.log(\"url >>>>>\", res.data.special_abilities, \"<<<\");\n        res.data.special_abilities.map(item => console.log(\"ABILITIES>>>\", item.name + \": \" + item.desc));\n        const specialAbilities = res.data.special_abilities;\n        console.log(\"CONST SA>>>\", specialAbilities);\n        dispatch(fetchSuccess(res.data));\n      });\n    }) //Or catch the error and log\n    .catch(err => {\n      dispatch(fetchFail(err));\n    });\n  };\n}; //Define and export fetchStart\n\nexport const FETCH_START = \"FETCH_START\";\nexport const fetchStart = () => {\n  return {\n    type: FETCH_START\n  };\n}; //Define and export fetchSuccess\n\nexport const FETCH_SUCCESS = \"FETCH_SUCCESS\";\nexport const fetchSuccess = monster => {\n  return {\n    type: FETCH_SUCCESS,\n    payload: monster\n  };\n}; //Define and export fetchFail\n\nexport const FETCH_FAIL = \"FETCH_FAIL\";\nexport const fetchFail = error => {\n  return {\n    type: FETCH_FAIL,\n    payload: error\n  };\n};","map":{"version":3,"sources":["/home/trollhero/MEGAsync/Lambda/vercel-async-redux/app/src/actions/actions.js"],"names":["axios","getMonster","dispatch","fetchStart","get","then","res","randomNumber","Math","floor","random","console","log","data","results","monsterName","index","fetchSuccess","special_abilities","map","item","name","desc","specialAbilities","catch","err","fetchFail","FETCH_START","type","FETCH_SUCCESS","monster","payload","FETCH_FAIL","error"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAGA;;AACA,OAAO,MAAMC,UAAU,GAAG,MAC1B;AACI;AACA,SAAQC,QAAD,IACP;AAEI;AACAA,IAAAA,QAAQ,CAACC,UAAU,EAAX,CAAR,CAHJ,CAII;;AACAH,IAAAA,KAAK,CAACI,GAAN,CAAU,uCAAV,EAEI;AAFJ,KAGKC,IAHL,CAGUC,GAAG,IACT;AACI;AACA,UAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAnB,CAFJ,CAII;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BN,GAAG,CAACO,IAAJ,CAASC,OAAnC;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BN,GAAG,CAACO,IAAJ,CAASC,OAAT,CAAkB,GAAEP,YAAa,EAAjC,CAA3B,EANJ,CAQI;;AACA,YAAMQ,WAAW,GAAGT,GAAG,CAACO,IAAJ,CAASC,OAAT,CAAkB,GAAEP,YAAa,EAAjC,EAAoCS,KAAxD,CATJ,CAWK;AACD;;AACAd,MAAAA,QAAQ,CAACe,YAAY,CAACX,GAAG,CAACO,IAAJ,CAASC,OAAT,CAAkB,GAAEP,YAAa,EAAjC,EAAoCS,KAArC,CAAb,CAAR,CAbJ,CAeK;;AACAhB,MAAAA,KAAK,CAACI,GAAN,CAAW,wCAAuCW,WAAY,EAA9D,EACCV,IADD,CACMC,GAAG,IACL;AACIK,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBN,GAAG,CAACO,IAAJ,CAASK,iBAAjC,EAAoD,KAApD;AAEAZ,QAAAA,GAAG,CAACO,IAAJ,CAASK,iBAAT,CAA2BC,GAA3B,CAAgCC,IAAD,IAC3BT,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BQ,IAAI,CAACC,IAAL,GAAY,IAAZ,GAAmBD,IAAI,CAACE,IAApD,CADJ;AAGD,cAAMC,gBAAgB,GAAGjB,GAAG,CAACO,IAAJ,CAASK,iBAAlC;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BW,gBAA3B;AACArB,QAAAA,QAAQ,CAACe,YAAY,CAACX,GAAG,CAACO,IAAL,CAAb,CAAR;AACF,OAXL;AAcJ,KAlCL,EAqCI;AArCJ,KAsCKW,KAtCL,CAsCWC,GAAG,IACV;AACIvB,MAAAA,QAAQ,CAACwB,SAAS,CAACD,GAAD,CAAV,CAAR;AACH,KAzCL;AA0CH,GAhDD;AAiDH,CApDM,C,CAsDP;;AACA,OAAO,MAAME,WAAW,GAAG,aAApB;AACP,OAAO,MAAMxB,UAAU,GAAG,MAC1B;AACI,SAAO;AAACyB,IAAAA,IAAI,EAAED;AAAP,GAAP;AACH,CAHM,C,CAKP;;AACA,OAAO,MAAME,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMZ,YAAY,GAAIa,OAAD,IAC5B;AACI,SAAO;AAACF,IAAAA,IAAI,EAAEC,aAAP;AAAsBE,IAAAA,OAAO,EAAED;AAA/B,GAAP;AACH,CAHM,C,CAKP;;AACA,OAAO,MAAME,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMN,SAAS,GAAIO,KAAD,IACzB;AACI,SAAO;AAACL,IAAAA,IAAI,EAAEI,UAAP;AAAmBD,IAAAA,OAAO,EAAEE;AAA5B,GAAP;AACH,CAHM","sourcesContent":["//Imports\nimport axios from 'axios';\n\n\n//Define and export getMonster function\nexport const getMonster = () =>\n{\n    //REturn, pass in the dispatch()\n    return (dispatch) => \n    {\n        \n        //Call dispatch, pass in fetchStart()\n        dispatch(fetchStart());\n        //Get the monsters\n        axios.get(\"https://www.dnd5eapi.co/api/monsters/\")\n\n            //Then set the data\n            .then(res=>\n            {\n                //Generate a random number to randomly choose a monster\n                var randomNumber = Math.floor(Math.random() * 300);\n\n                //Log the index from the api return\n                console.log(\"MONSTER>>>\", res.data.results);    \n                console.log(\"RESULTS>>>>\", res.data.results[`${randomNumber}`]);\n              \n                //Assign the index to a variable\n                const monsterName = res.data.results[`${randomNumber}`].index;\n\n                 //invoke dispatch, pass in fetchSuccess with randomnumber and index\n                //which determines the monster we are calling. Assign to results\n                dispatch(fetchSuccess(res.data.results[`${randomNumber}`].index));\n    \n                 //Call API again, append the index to the api\n                 axios.get(`https://www.dnd5eapi.co/api/monsters/${monsterName}`)\n                 .then(res =>\n                     {\n                         console.log(\"url >>>>>\",res.data.special_abilities, \"<<<\")\n\n                         res.data.special_abilities.map((item) => (\n                             console.log(\"ABILITIES>>>\", item.name + \": \" + item.desc)\n                        ))\n                        const specialAbilities = res.data.special_abilities;\n                        console.log(\"CONST SA>>>\", specialAbilities)\n                        dispatch(fetchSuccess(res.data));\n                     })   \n                     \n                     \n            })\n\n\n            //Or catch the error and log\n            .catch(err => \n            {\n                dispatch(fetchFail(err));\n            });\n    }\n}\n\n//Define and export fetchStart\nexport const FETCH_START = \"FETCH_START\";\nexport const fetchStart = ()=> \n{\n    return({type: FETCH_START});\n}\n\n//Define and export fetchSuccess\nexport const FETCH_SUCCESS = \"FETCH_SUCCESS\";\nexport const fetchSuccess = (monster)=> \n{\n    return({type: FETCH_SUCCESS, payload: monster});\n}\n\n//Define and export fetchFail\nexport const FETCH_FAIL = \"FETCH_FAIL\";\nexport const fetchFail = (error)=> \n{\n    return({type: FETCH_FAIL, payload: error});\n}"]},"metadata":{},"sourceType":"module"}